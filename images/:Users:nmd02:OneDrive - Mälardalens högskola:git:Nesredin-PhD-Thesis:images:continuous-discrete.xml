<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.</declaration>
	<template>
		<name x="5" y="5">Continous-time</name>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="0" y="0">
			<name x="-51" y="-8">Start</name>
			<label kind="invariant" x="17" y="-8">gtime&lt;=sn*IAT</label>
		</location>
		<location id="id1" x="0" y="127">
			<name x="-68" y="119">Operate</name>
			<label kind="exponentialrate" x="-17" y="136">1000</label>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="76" y="127">blockRoutine()</label>
			<nail x="68" y="127"/>
			<nail x="68" y="161"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="8" y="25">gtime&gt;=sn*IAT</label>
			<label kind="assignment" x="8" y="59">initialize(),
blockRoutine()</label>
		</transition>
	</template>
	<template>
		<name>Discrete-time</name>
		<location id="id2" x="0" y="127">
			<name x="-68" y="119">Operate</name>
			<label kind="exponentialrate" x="-17" y="136">t&lt;=ts</label>
		</location>
		<location id="id3" x="0" y="0">
			<name x="-51" y="-8">Start</name>
			<label kind="invariant" x="17" y="-8">gtime&lt;=sn*IAT</label>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="guard" x="25" y="102">t&gt;=ts</label>
			<label kind="assignment" x="76" y="127">blockRoutine(),
t:=0</label>
			<nail x="68" y="127"/>
			<nail x="68" y="161"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="8" y="25">gtime&gt;=sn*IAT</label>
			<label kind="assignment" x="8" y="59">initialize(),
blockRoutine()</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = Template();
// List one or more processes to be composed into a system.
system Process;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
